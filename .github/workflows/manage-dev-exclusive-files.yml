name: Manage Dev-Exclusive Files

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write  # Grants write permissions for pushing changes

jobs:
  manage-dev-files:
    runs-on: ubuntu-latest
    env:
      DEV_EXCLUSIVE_FILES: "cleanup.sh"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch the entire history to ensure the main branch is available

      - name: Fetch main branch
        run: |
          git fetch origin main

      - name: Set Git user identity
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Remove dev-exclusive files in pull requests
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
        run: |
          FOUND_FILES=0
          echo "Starting to check for dev-exclusive files in PR..."
          echo "Files to check: $DEV_EXCLUSIVE_FILES"

          for file in $DEV_EXCLUSIVE_FILES; do
            echo "Checking if $file exists in the PR diff..."
            if git diff --name-only origin/main...HEAD | grep -q "$file"; then
              echo "Warning: $file found in PR. It will be removed."
              echo "Attempting to remove $file from the staging area..."
              git rm --cached "$file" || echo "Failed to remove $file from the staging area (may not be staged)."

              echo "Attempting to remove $file from the working tree..."
              rm -f "$file" || echo "Failed to remove $file from the working tree (may not exist)."

              FOUND_FILES=1
              echo "$file successfully removed from PR."
            else
              echo "$file not found in the PR diff. Skipping."
            fi
          done

          if [ "$FOUND_FILES" -eq 1 ]; then
            echo "Changes detected. Preparing to commit and push updates..."
            
            echo "Committing changes..."
            git commit -m "Remove dev-exclusive files from PR" || echo "No changes to commit."

            echo "Determining the branch to push changes..."
            TARGET_BRANCH=${{ github.head_ref }}
            echo "Target branch for push: $TARGET_BRANCH"

            echo "Pushing changes to branch: $TARGET_BRANCH..."
            git push origin HEAD:$TARGET_BRANCH || echo "Failed to push changes back to the PR branch."
          else
            echo "No dev-exclusive files detected. No changes to push."
          fi

      - name: Block dev-exclusive files on push to main
        if: github.event_name == 'push'
        run: |
          for file in $DEV_EXCLUSIVE_FILES; do
            if git diff --name-only HEAD~1 HEAD | grep -q "$file"; then
              echo "Error: $file cannot be pushed to main."
              exit 1
            fi
          done
